<%- include('header') -%>

<div class="bg-light py-3">
  <div class="container">
    <div class="row">
      <div class="col-md-12 mb-0"><a href="/index">Home</a> <span class="mx-2 mb-0">/</span> <a href="/cart">Cart</a> <span class="mx-2 mb-0">/</span> <strong class="text-black">Checkout</strong></div>
    </div>
  </div>
</div>

<div class="site-section">
  <div class="container">
    <div class="row mb-5">
      <div class="col-md-12">
        <div class="border p-4 rounded" role="alert">
          Returning customer? <a href="#">Click here</a> to login
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 mb-5 mb-md-0">
        <h2 class="h3 mb-3 text-black">Billing Details</h2>
        <div class="p-3 p-lg-5 border">
          <form id="order-form" method="POST" action="/placeorder">
            <div class="form-group row">
              <div class="col-md-6">
                <label for="fullName" class="text-black">Full Name <span class="text-danger">*</span></label>
                <input type="text" class="form-control" value="<%=user.fullName %>" id="fullName" name="fullName" required>
              </div>
              <div class="col-md-6">
                <label for="mobileNumber" class="text-black">Mobile number <span class="text-danger">*</span></label>
                <input type="text" class="form-control" value="<%=user.mobileNumber%>" id="mobileNumber" name="mobileNumber" required>
              </div>
            </div>

            <div class="form-group row">
              <div class="col-md-12">
                <label for="email" class="text-black">Email address </label>
                <input type="email" class="form-control" id="email" value="<%=user.email%>" name="email">
              </div>
            </div>

            <div class="form-group row">
              <div class="col-md-12">
                <label for="address" class="text-black">Address <span class="text-danger">*</span></label>
                <input type="text" class="form-control" value="<%=user.address%>" id="address" name="address" placeholder="Street address" required>
              </div>
            </div>
            <!-- Add more form fields as needed -->

            <input type="hidden" name="products" value='<%= JSON.stringify(productsInCart) %>'>

            <div class="form-group">
              <button type="submit" id="rzp-button1" class="btn btn-primary btn-lg py-3 btn-block">Place Order</button>
            </div>
          
        </div>
      </div>
      
      <div class="col-md-6">
        <h2 class="h3 mb-3 text-black">Your Order</h2>
        <div class="p-3 p-lg-5 border">
          <table class="table site-block-order-table mb-5">
            <thead>
              <tr>
                <th>Product</th>
                <th>Total</th>
              </tr>
            </thead>
            <tbody>
              <% let cartSubtotal = 0; %>
              <% productsInCart.forEach(item => { %>
                <% const total = item.product.price * item.quantity; %>
                <tr>
                  <td><%= item.product.productName %> <strong class="mx-2">x</strong> <%= item.quantity %></td>
                  <td>$<%= total.toFixed(2) %></td>
                </tr>
                <% cartSubtotal += total; %>
              <% }); %>
              <tr>
                <td class="text-black font-weight-bold"><strong>Cart Subtotal</strong></td>
                <td class="text-black">$<%= cartSubtotal.toFixed(2) %></td>
              </tr>
              <tr>
                <td class="text-black font-weight-bold"><strong>Order Total</strong></td>
                <td class="text-black font-weight-bold"><strong>$<%= cartSubtotal.toFixed(2) %></td>
              </tr>
              <input type="hidden" name="totalPrice" value="<%= cartSubtotal.toFixed(2) %>">
            </form>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.getElementById('rzp-button1').onclick = async function(e) {
      e.preventDefault();

      const address = document.getElementById('address').value;
      if (!address) {
          alert('Please provide an address before proceeding to payment.');
          return;
      }

      try {
          const response = await fetch('/create-order', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                  amount: "<%= cartSubtotal.toFixed(2) %>", // Amount in currency subunits
                  currency: 'INR',
                  receipt: 'order_rcptid_11'
              })
          });

          const order = await response.json();

          const options = {
              "key": "rzp_test_dxPHkrmdpsfYog", // Enter the Key ID generated from the Dashboard
              "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
              "currency": order.currency,
              "name": "Acme Corp",
              "description": "Test Transaction",
              "image": "https://example.com/your_logo",
              "order_id": order.id, // This is a sample Order ID. Pass the `id` obtained in the previous step
              "handler": function (response){
                  // Send payment details to the server for verification
                  fetch('/verify-payment', {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({
                          razorpay_order_id: response.razorpay_order_id,
                          razorpay_payment_id: response.razorpay_payment_id,
                          razorpay_signature: response.razorpay_signature
                      })
                  })
                  .then(response => response.json())
                  .then(data => {
                      if (data.success) {
                          document.getElementById('order-form').submit();
                          alert('Payment successful and verified!');
                      } else {
                          alert('Payment verification failed!');
                      }
                  })
                  .catch(error => {
                      console.error('Error verifying payment:', error);
                      alert('Oops! Something went wrong during payment verification.');
                  });
              },
              "prefill": {
                  "name": "<%= user.fullName %>",
                  "email": "<%= user.email %>",
                  "contact": "<%= user.mobileNumber %>"
              },
              "notes": {
                  "address": "<%= user.address %>"
              },
              "theme": {
                  "color": "#6f42c1" // Purple color
              }
          };

          const rzp1 = new Razorpay(options);
          rzp1.on('payment.failed', function (response){
              alert(response.error.description);
          });
          rzp1.open();
      } catch (error) {
          console.error('Error opening Razorpay checkout:', error);
          alert('Oops! Something went wrong.');
      }
  }
</script>

<%- include('footer') -%>
